//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AvonessaMVC5
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AvonessaDBEntities : DbContext
    {
        public AvonessaDBEntities()
            : base("name=AvonessaDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrator> Administrators { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CustomerOrder> CustomerOrders { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<OrderProduct> OrderProducts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ShoppingBagProduct> ShoppingBagProducts { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblPostLinkData> tblPostLinkDatas { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<ShoppingBag> ShoppingBags { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_DeleteProductFromSB(Nullable<int> sB_Id, Nullable<int> p_Id, ObjectParameter pExistsInBag)
        {
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteProductFromSB", sB_IdParameter, p_IdParameter, pExistsInBag);
        }
    
        public virtual int sp_DeleteShoppingBag(Nullable<int> sB_Id)
        {
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteShoppingBag", sB_IdParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GetCategories_Result> sp_GetCategories(Nullable<int> c_id)
        {
            var c_idParameter = c_id.HasValue ?
                new ObjectParameter("c_id", c_id) :
                new ObjectParameter("c_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCategories_Result>("sp_GetCategories", c_idParameter);
        }
    
        public virtual int sp_GetOrderInsertAccountUpdateOP(string cR_Address, string cR_Email, string cR_ContactName, Nullable<int> sB_Id, ObjectParameter o_Id)
        {
            var cR_AddressParameter = cR_Address != null ?
                new ObjectParameter("CR_Address", cR_Address) :
                new ObjectParameter("CR_Address", typeof(string));
    
            var cR_EmailParameter = cR_Email != null ?
                new ObjectParameter("CR_Email", cR_Email) :
                new ObjectParameter("CR_Email", typeof(string));
    
            var cR_ContactNameParameter = cR_ContactName != null ?
                new ObjectParameter("CR_ContactName", cR_ContactName) :
                new ObjectParameter("CR_ContactName", typeof(string));
    
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetOrderInsertAccountUpdateOP", cR_AddressParameter, cR_EmailParameter, cR_ContactNameParameter, sB_IdParameter, o_Id);
        }
    
        public virtual ObjectResult<string> sp_GetPassword(string adminLogin)
        {
            var adminLoginParameter = adminLogin != null ?
                new ObjectParameter("AdminLogin", adminLogin) :
                new ObjectParameter("AdminLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPassword", adminLoginParameter);
        }
    
        public virtual ObjectResult<sp_GetProducts_Result> sp_GetProducts(Nullable<int> c_Id, Nullable<int> p_Id)
        {
            var c_IdParameter = c_Id.HasValue ?
                new ObjectParameter("C_Id", c_Id) :
                new ObjectParameter("C_Id", typeof(int));
    
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProducts_Result>("sp_GetProducts", c_IdParameter, p_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<short>> sp_GetSBQuantity(Nullable<int> sB_Id)
        {
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("sp_GetSBQuantity", sB_IdParameter);
        }
    
        public virtual ObjectResult<sp_GetShoppingBag_Result> sp_GetShoppingBag(Nullable<int> sB_Id)
        {
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetShoppingBag_Result>("sp_GetShoppingBag", sB_IdParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsertCategoryImage(Nullable<int> c_Id, string imageFilePath, string categoryName, string categoryNameEnglish)
        {
            var c_IdParameter = c_Id.HasValue ?
                new ObjectParameter("C_Id", c_Id) :
                new ObjectParameter("C_Id", typeof(int));
    
            var imageFilePathParameter = imageFilePath != null ?
                new ObjectParameter("ImageFilePath", imageFilePath) :
                new ObjectParameter("ImageFilePath", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryNameEnglishParameter = categoryNameEnglish != null ?
                new ObjectParameter("CategoryNameEnglish", categoryNameEnglish) :
                new ObjectParameter("CategoryNameEnglish", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCategoryImage", c_IdParameter, imageFilePathParameter, categoryNameParameter, categoryNameEnglishParameter);
        }
    
        public virtual int sp_InsertNamePassword(string loginName, string password)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertNamePassword", loginNameParameter, passwordParameter);
        }
    
        public virtual int sp_InsertPostLinkData(string plData, Nullable<int> o_O_Id, Nullable<bool> hasPassed)
        {
            var plDataParameter = plData != null ?
                new ObjectParameter("plData", plData) :
                new ObjectParameter("plData", typeof(string));
    
            var o_O_IdParameter = o_O_Id.HasValue ?
                new ObjectParameter("O_O_Id", o_O_Id) :
                new ObjectParameter("O_O_Id", typeof(int));
    
            var hasPassedParameter = hasPassed.HasValue ?
                new ObjectParameter("HasPassed", hasPassed) :
                new ObjectParameter("HasPassed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertPostLinkData", plDataParameter, o_O_IdParameter, hasPassedParameter);
        }
    
        public virtual int sp_IUProductData(Nullable<int> p_Id, Nullable<int> c_Id, Nullable<int> i_Id, Nullable<decimal> productCost, string productName, string note, string productNameEnglish, string noteEnglish, Nullable<int> productInStock)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            var c_IdParameter = c_Id.HasValue ?
                new ObjectParameter("C_Id", c_Id) :
                new ObjectParameter("C_Id", typeof(int));
    
            var i_IdParameter = i_Id.HasValue ?
                new ObjectParameter("I_Id", i_Id) :
                new ObjectParameter("I_Id", typeof(int));
    
            var productCostParameter = productCost.HasValue ?
                new ObjectParameter("ProductCost", productCost) :
                new ObjectParameter("ProductCost", typeof(decimal));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var productNameEnglishParameter = productNameEnglish != null ?
                new ObjectParameter("ProductNameEnglish", productNameEnglish) :
                new ObjectParameter("ProductNameEnglish", typeof(string));
    
            var noteEnglishParameter = noteEnglish != null ?
                new ObjectParameter("NoteEnglish", noteEnglish) :
                new ObjectParameter("NoteEnglish", typeof(string));
    
            var productInStockParameter = productInStock.HasValue ?
                new ObjectParameter("ProductInStock", productInStock) :
                new ObjectParameter("ProductInStock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IUProductData", p_IdParameter, c_IdParameter, i_IdParameter, productCostParameter, productNameParameter, noteParameter, productNameEnglishParameter, noteEnglishParameter, productInStockParameter);
        }
    
        public virtual int sp_IUProductImage(string imageFilePath, string imageFilePath2, Nullable<int> p_Id, ObjectParameter i_Id)
        {
            var imageFilePathParameter = imageFilePath != null ?
                new ObjectParameter("ImageFilePath", imageFilePath) :
                new ObjectParameter("ImageFilePath", typeof(string));
    
            var imageFilePath2Parameter = imageFilePath2 != null ?
                new ObjectParameter("ImageFilePath2", imageFilePath2) :
                new ObjectParameter("ImageFilePath2", typeof(string));
    
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IUProductImage", imageFilePathParameter, imageFilePath2Parameter, p_IdParameter, i_Id);
        }
    
        public virtual int sp_MakeShoppingBag(Nullable<int> p_Id, Nullable<int> sB_Id, Nullable<short> sBP_Quantity, ObjectParameter sB_Id_out)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            var sBP_QuantityParameter = sBP_Quantity.HasValue ?
                new ObjectParameter("SBP_Quantity", sBP_Quantity) :
                new ObjectParameter("SBP_Quantity", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MakeShoppingBag", p_IdParameter, sB_IdParameter, sBP_QuantityParameter, sB_Id_out);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_UpdateOrder(Nullable<int> o_O_Id)
        {
            var o_O_IdParameter = o_O_Id.HasValue ?
                new ObjectParameter("O_O_Id", o_O_Id) :
                new ObjectParameter("O_O_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateOrder", o_O_IdParameter);
        }
    
        public virtual int sp_UpdatePassword(Nullable<int> a_Id, string password)
        {
            var a_IdParameter = a_Id.HasValue ?
                new ObjectParameter("A_Id", a_Id) :
                new ObjectParameter("A_Id", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePassword", a_IdParameter, passwordParameter);
        }
    
        public virtual int sp_UpdateShoppingBag(Nullable<int> sB_Id, Nullable<int> p_Id, Nullable<short> pQuantity)
        {
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            var pQuantityParameter = pQuantity.HasValue ?
                new ObjectParameter("PQuantity", pQuantity) :
                new ObjectParameter("PQuantity", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateShoppingBag", sB_IdParameter, p_IdParameter, pQuantityParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_GetShoppingBagById_Result> sp_GetShoppingBagById(Nullable<int> sB_Id)
        {
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetShoppingBagById_Result>("sp_GetShoppingBagById", sB_IdParameter);
        }
    
        public virtual ObjectResult<sp_GetProductsWitnCategoryName_Result> sp_GetProductsWitnCategoryName(Nullable<int> c_Id, Nullable<int> p_Id, ObjectParameter categoryName_out)
        {
            var c_IdParameter = c_Id.HasValue ?
                new ObjectParameter("C_Id", c_Id) :
                new ObjectParameter("C_Id", typeof(int));
    
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProductsWitnCategoryName_Result>("sp_GetProductsWitnCategoryName", c_IdParameter, p_IdParameter, categoryName_out);
        }
    
        public virtual int sp_InsertContactData(string cR_ContactName, string cR_Email, string cR_AddressCountry, string cR_PostalCode, string cR_AddressCity, string cR_AddressStreet)
        {
            var cR_ContactNameParameter = cR_ContactName != null ?
                new ObjectParameter("CR_ContactName", cR_ContactName) :
                new ObjectParameter("CR_ContactName", typeof(string));
    
            var cR_EmailParameter = cR_Email != null ?
                new ObjectParameter("CR_Email", cR_Email) :
                new ObjectParameter("CR_Email", typeof(string));
    
            var cR_AddressCountryParameter = cR_AddressCountry != null ?
                new ObjectParameter("CR_AddressCountry", cR_AddressCountry) :
                new ObjectParameter("CR_AddressCountry", typeof(string));
    
            var cR_PostalCodeParameter = cR_PostalCode != null ?
                new ObjectParameter("CR_PostalCode", cR_PostalCode) :
                new ObjectParameter("CR_PostalCode", typeof(string));
    
            var cR_AddressCityParameter = cR_AddressCity != null ?
                new ObjectParameter("CR_AddressCity", cR_AddressCity) :
                new ObjectParameter("CR_AddressCity", typeof(string));
    
            var cR_AddressStreetParameter = cR_AddressStreet != null ?
                new ObjectParameter("CR_AddressStreet", cR_AddressStreet) :
                new ObjectParameter("CR_AddressStreet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertContactData", cR_ContactNameParameter, cR_EmailParameter, cR_AddressCountryParameter, cR_PostalCodeParameter, cR_AddressCityParameter, cR_AddressStreetParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_GetProductCost(Nullable<int> p_Id)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_GetProductCost", p_IdParameter);
        }
    
        public virtual int sp_InsertPayerIdToShoppingBag(string payerId, Nullable<int> sB_Id, string paymentId)
        {
            var payerIdParameter = payerId != null ?
                new ObjectParameter("PayerId", payerId) :
                new ObjectParameter("PayerId", typeof(string));
    
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            var paymentIdParameter = paymentId != null ?
                new ObjectParameter("PaymentId", paymentId) :
                new ObjectParameter("PaymentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertPayerIdToShoppingBag", payerIdParameter, sB_IdParameter, paymentIdParameter);
        }
    
        public virtual int sp_InsertDataFromPayPal(string cR_ContactName, string cR_Email, string cR_AddressCountry, string cR_PostalCode, string cR_AddressCountryCode, string cR_AddressState, string cR_AddressCity, string cR_AddressStreet, string cR_PayerId, string o_Payment_date, string o_Transaction)
        {
            var cR_ContactNameParameter = cR_ContactName != null ?
                new ObjectParameter("CR_ContactName", cR_ContactName) :
                new ObjectParameter("CR_ContactName", typeof(string));
    
            var cR_EmailParameter = cR_Email != null ?
                new ObjectParameter("CR_Email", cR_Email) :
                new ObjectParameter("CR_Email", typeof(string));
    
            var cR_AddressCountryParameter = cR_AddressCountry != null ?
                new ObjectParameter("CR_AddressCountry", cR_AddressCountry) :
                new ObjectParameter("CR_AddressCountry", typeof(string));
    
            var cR_PostalCodeParameter = cR_PostalCode != null ?
                new ObjectParameter("CR_PostalCode", cR_PostalCode) :
                new ObjectParameter("CR_PostalCode", typeof(string));
    
            var cR_AddressCountryCodeParameter = cR_AddressCountryCode != null ?
                new ObjectParameter("CR_AddressCountryCode", cR_AddressCountryCode) :
                new ObjectParameter("CR_AddressCountryCode", typeof(string));
    
            var cR_AddressStateParameter = cR_AddressState != null ?
                new ObjectParameter("CR_AddressState", cR_AddressState) :
                new ObjectParameter("CR_AddressState", typeof(string));
    
            var cR_AddressCityParameter = cR_AddressCity != null ?
                new ObjectParameter("CR_AddressCity", cR_AddressCity) :
                new ObjectParameter("CR_AddressCity", typeof(string));
    
            var cR_AddressStreetParameter = cR_AddressStreet != null ?
                new ObjectParameter("CR_AddressStreet", cR_AddressStreet) :
                new ObjectParameter("CR_AddressStreet", typeof(string));
    
            var cR_PayerIdParameter = cR_PayerId != null ?
                new ObjectParameter("CR_PayerId", cR_PayerId) :
                new ObjectParameter("CR_PayerId", typeof(string));
    
            var o_Payment_dateParameter = o_Payment_date != null ?
                new ObjectParameter("O_Payment_date", o_Payment_date) :
                new ObjectParameter("O_Payment_date", typeof(string));
    
            var o_TransactionParameter = o_Transaction != null ?
                new ObjectParameter("O_Transaction", o_Transaction) :
                new ObjectParameter("O_Transaction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDataFromPayPal", cR_ContactNameParameter, cR_EmailParameter, cR_AddressCountryParameter, cR_PostalCodeParameter, cR_AddressCountryCodeParameter, cR_AddressStateParameter, cR_AddressCityParameter, cR_AddressStreetParameter, cR_PayerIdParameter, o_Payment_dateParameter, o_TransactionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertDataFromPayPal_0(string cR_ContactName, string cR_Email, string cR_AddressCountry, string cR_PostalCode, string cR_AddressCountryCode, string cR_AddressState, string cR_AddressCity, string cR_AddressStreet, string cR_PayerId, string o_Payment_date, string txnID)
        {
            var cR_ContactNameParameter = cR_ContactName != null ?
                new ObjectParameter("CR_ContactName", cR_ContactName) :
                new ObjectParameter("CR_ContactName", typeof(string));
    
            var cR_EmailParameter = cR_Email != null ?
                new ObjectParameter("CR_Email", cR_Email) :
                new ObjectParameter("CR_Email", typeof(string));
    
            var cR_AddressCountryParameter = cR_AddressCountry != null ?
                new ObjectParameter("CR_AddressCountry", cR_AddressCountry) :
                new ObjectParameter("CR_AddressCountry", typeof(string));
    
            var cR_PostalCodeParameter = cR_PostalCode != null ?
                new ObjectParameter("CR_PostalCode", cR_PostalCode) :
                new ObjectParameter("CR_PostalCode", typeof(string));
    
            var cR_AddressCountryCodeParameter = cR_AddressCountryCode != null ?
                new ObjectParameter("CR_AddressCountryCode", cR_AddressCountryCode) :
                new ObjectParameter("CR_AddressCountryCode", typeof(string));
    
            var cR_AddressStateParameter = cR_AddressState != null ?
                new ObjectParameter("CR_AddressState", cR_AddressState) :
                new ObjectParameter("CR_AddressState", typeof(string));
    
            var cR_AddressCityParameter = cR_AddressCity != null ?
                new ObjectParameter("CR_AddressCity", cR_AddressCity) :
                new ObjectParameter("CR_AddressCity", typeof(string));
    
            var cR_AddressStreetParameter = cR_AddressStreet != null ?
                new ObjectParameter("CR_AddressStreet", cR_AddressStreet) :
                new ObjectParameter("CR_AddressStreet", typeof(string));
    
            var cR_PayerIdParameter = cR_PayerId != null ?
                new ObjectParameter("CR_PayerId", cR_PayerId) :
                new ObjectParameter("CR_PayerId", typeof(string));
    
            var o_Payment_dateParameter = o_Payment_date != null ?
                new ObjectParameter("O_Payment_date", o_Payment_date) :
                new ObjectParameter("O_Payment_date", typeof(string));
    
            var txnIDParameter = txnID != null ?
                new ObjectParameter("TxnID", txnID) :
                new ObjectParameter("TxnID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertDataFromPayPal_0", cR_ContactNameParameter, cR_EmailParameter, cR_AddressCountryParameter, cR_PostalCodeParameter, cR_AddressCountryCodeParameter, cR_AddressStateParameter, cR_AddressCityParameter, cR_AddressStreetParameter, cR_PayerIdParameter, o_Payment_dateParameter, txnIDParameter);
        }
    
        public virtual int sp_InsertOrderDeleteSB(string payerId, Nullable<int> sB_Id, string paymentId)
        {
            var payerIdParameter = payerId != null ?
                new ObjectParameter("PayerId", payerId) :
                new ObjectParameter("PayerId", typeof(string));
    
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            var paymentIdParameter = paymentId != null ?
                new ObjectParameter("PaymentId", paymentId) :
                new ObjectParameter("PaymentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrderDeleteSB", payerIdParameter, sB_IdParameter, paymentIdParameter);
        }
    
        public virtual int sp_InsertQuantityToSB(Nullable<int> p_Id, Nullable<int> sB_Id, Nullable<short> quantity)
        {
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            var sB_IdParameter = sB_Id.HasValue ?
                new ObjectParameter("SB_Id", sB_Id) :
                new ObjectParameter("SB_Id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertQuantityToSB", p_IdParameter, sB_IdParameter, quantityParameter);
        }
    
        public virtual ObjectResult<sp_GetPhotoshoots_Result> sp_GetPhotoshoots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPhotoshoots_Result>("sp_GetPhotoshoots");
        }
    
        public virtual ObjectResult<sp_GetProducts_1_Result> sp_GetProducts_1(Nullable<int> c_Id, Nullable<int> p_Id)
        {
            var c_IdParameter = c_Id.HasValue ?
                new ObjectParameter("C_Id", c_Id) :
                new ObjectParameter("C_Id", typeof(int));
    
            var p_IdParameter = p_Id.HasValue ?
                new ObjectParameter("P_Id", p_Id) :
                new ObjectParameter("P_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProducts_1_Result>("sp_GetProducts_1", c_IdParameter, p_IdParameter);
        }
    }
}
